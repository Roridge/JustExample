package com.flowmellow.justexample.activities.to;

public class RestaurantTO implements Comparable<RestaurantTO> {

	private final String name;
	private final float ratingStars;
	private final String url;

	public RestaurantTO(String name, float ratingStars, String url) {
		this.name = name;
		this.ratingStars = ratingStars;
		this.url = url;
	}

	public String getName() {
		return this.name;
	}

	public float getRatingStars() {
		return this.ratingStars;
	}

	public String getUrl() {
		return this.url;
	}

	/**
	 * Order by rating
	 */
	@Override
	public int compareTo(RestaurantTO restaurantTO) {
		// Compare on ratingStars
		final float comparable = restaurantTO.getRatingStars();
		final int result;

		if (this.ratingStars == comparable) {
			// Equal
			result = 0;
		} else if (this.ratingStars > comparable) {
			// Before
			result = -1;
		} else {
			// After
			result = 1;
		}

		return result;
	}

	@Override
	public String toString() {
		return "RestaurantTO [name=" + name + ", ratingStars=" + ratingStars + ", url=" + url + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + Float.floatToIntBits(ratingStars);
		result = prime * result + ((url == null) ? 0 : url.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		RestaurantTO other = (RestaurantTO) obj;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (Float.floatToIntBits(ratingStars) != Float.floatToIntBits(other.ratingStars))
			return false;
		if (url == null) {
			if (other.url != null)
				return false;
		} else if (!url.equals(other.url))
			return false;
		return true;
	}
}
