package com.flowmellow.justexample.activities.to;

public class RestaurantTO implements Comparable<RestaurantTO> {

	private final String id;
	private final String name;
	private final float ratingStars;
	
	public RestaurantTO(String id, String name, float ratingStars) {
		this.id = id;
		this.name = name;
		this.ratingStars = ratingStars;
	}
	
	public String getId() {
		return this.id;
	}

	public String getName() {
		return this.name;
	}

	public float getRatingStars() {
		return this.ratingStars;
	}

	/**
	 * Order by rating
	 */
	@Override
	public int compareTo(RestaurantTO restaurantTO) {
		//Compare on ratingStars
		final float comparable = restaurantTO.getRatingStars();
	    final int result;
	    
	    if(this.ratingStars == comparable) {
	    	//Equal
	    	result = 0; 
	    } else if(this.ratingStars > comparable) {
	    	//Before
	    	result = -1;
	    } else {
	    	//After
	    	result = 1;
	    }
	    
	    return result;
	}

	@Override
	public String toString() {
		return "RestaurantTO [id=" + id + ", name=" + name + ", ratingStars=" + ratingStars + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + Float.floatToIntBits(ratingStars);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		RestaurantTO other = (RestaurantTO) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (Float.floatToIntBits(ratingStars) != Float.floatToIntBits(other.ratingStars))
			return false;
		return true;
	}
}
